"use strict";(self["webpackChunkjoshua_vue_project"]=self["webpackChunkjoshua_vue_project"]||[]).push([[7189],{7189:function(t,r,e){e.d(r,{K:function(){return Sr}});var a={};e.r(a),e.d(a,{getUserRoles:function(){return k}});var n={};e.r(n),e.d(n,{createAuthUser:function(){return v},deleteAuthUser:function(){return x},getAuthUserById:function(){return I},getAuthUsers:function(){return b}});var o={};e.r(o),e.d(o,{countAgencyRecord:function(){return C},createAgency:function(){return T},deleteAgency:function(){return Y},getAgencies:function(){return D},getAgenciesWithPaging:function(){return $},getAgencyById:function(){return A},updateAgency:function(){return R}});var c={};e.r(c),e.d(c,{countAlbumRecord:function(){return F},createAlbum:function(){return M},deleteAlbum:function(){return L},deleteAlbumWithRelations:function(){return U},getAlbumById:function(){return P},getAlbums:function(){return O},getAlbumsWithPaging:function(){return S},updateAlbum:function(){return B}});var s={};e.r(s),e.d(s,{countDiscographyRecord:function(){return z},createDiscography:function(){return H},deleteDiscography:function(){return G},getDiscographies:function(){return j},getDiscographiesWithPaging:function(){return W},getDiscographyById:function(){return K},updateDiscography:function(){return J}});var i={};e.r(i),e.d(i,{countEventRecord:function(){return et},createEvent:function(){return Z},deleteEvent:function(){return rt},getEventById:function(){return X},getEvents:function(){return V},getEventsWithPaging:function(){return Q},updateEvent:function(){return tt}});var u={};e.r(u),e.d(u,{countTalentRecord:function(){return ut},createTalent:function(){return ct},deleteTalent:function(){return it},getTalentById:function(){return ot},getTalents:function(){return nt},getTalentsWithPaging:function(){return at},updateTalent:function(){return st}});var d={};e.r(d),e.d(d,{countDatasetRecord:function(){return ft},createDataset:function(){return ht},deleteDataset:function(){return yt},exportDataset:function(){return pt},getCountDataset:function(){return gt},getDatasetById:function(){return lt},getDatasets:function(){return dt},importDataset:function(){return Nt},updateDataset:function(){return mt}});var g={};e.r(g),e.d(g,{countDatasetUnprocessRecord:function(){return xt},createDataset:function(){return bt},deleteDatasetUnprocess:function(){return vt},getCountDatasetUnprocess:function(){return qt},getDatasetUnprocess:function(){return Et},getDatasetUnprocessById:function(){return kt},updateDatasetUnprocess:function(){return It}});var l={};e.r(l),e.d(l,{countChatgroupRecord:function(){return Yt},createChatgroup:function(){return At},deleteChatgroup:function(){return Rt},getChatgroupsWithMessage:function(){return $t},getChatgroupsWithMessageById:function(){return Dt},updateChatgroup:function(){return Tt}});var m={};e.r(m),e.d(m,{countMessageRecord:function(){return Bt},createMessage:function(){return Ot},deleteMessage:function(){return Mt},getMessages:function(){return Ct},getMessagesById:function(){return St},updateMessage:function(){return Pt}});var y={};e.r(y),e.d(y,{countTaskRecord:function(){return Ht},createTask:function(){return Wt},deleteTask:function(){return Kt},getTaskById:function(){return Ft},getTasks:function(){return Ut},getTasksWithPaging:function(){return Lt},updateTask:function(){return jt}});var f={};e.r(f),e.d(f,{countYugiohBanlistRecord:function(){return Zt},createYugiohBanlist:function(){return Qt},deleteYugiohBanlist:function(){return Xt},getYugiohBanlistById:function(){return zt},getYugiohBanlists:function(){return Gt},getYugiohBanlistsWithPaging:function(){return Jt},updateYugiohBanlist:function(){return Vt}});var w={};e.r(w),e.d(w,{countYugiohCardRecord:function(){return cr},createYugiohCard:function(){return ar},deleteYugiohCard:function(){return or},getYugiohCardById:function(){return er},getYugiohCards:function(){return rr},getYugiohCardsWithPaging:function(){return tr},updateYugiohCard:function(){return nr}});var _={};e.r(_),e.d(_,{countYugiohDeckRecord:function(){return hr},createYugiohDeck:function(){return dr},deleteYugiohDeck:function(){return lr},getYugiohDeckById:function(){return ur},getYugiohDecks:function(){return ir},getYugiohDecksWithPaging:function(){return sr},updateYugiohDeck:function(){return gr}});var p={};e.r(p),e.d(p,{countYugiohDuelistRecord:function(){return Nr},createYugiohDuelist:function(){return wr},deleteYugiohDuelist:function(){return pr},getYugiohDuelistById:function(){return fr},getYugiohDuelists:function(){return yr},getYugiohDuelistsWithPaging:function(){return mr},updateYugiohDuelist:function(){return _r}});var N={};e.r(N),e.d(N,{countYugiohProductRecord:function(){return xr},createYugiohProduct:function(){return br},deleteYugiohProduct:function(){return vr},getYugiohProductById:function(){return kr},getYugiohProducts:function(){return qr},getYugiohProductsWithPaging:function(){return Er},updateYugiohProduct:function(){return Ir}});var E={};e.r(E),e.d(E,{countYugiohTournamentRecord:function(){return Cr},createYugiohTournament:function(){return Tr},deleteYugiohTournament:function(){return Yr},getYugiohTournamentById:function(){return Ar},getYugiohTournaments:function(){return Dr},getYugiohTournamentsWithPaging:function(){return $r},updateYugiohTournament:function(){return Rr}});var q=e(9137);const k=async()=>{const{data:t,error:r}=await q.N.from("user_role").select("*");return r?[]:t};async function b(t,r){const{data:e,error:a}=await q.N.auth.admin.listUsers({page:t,perPage:r});if(a)return[];const n=await k(),o={};n.forEach((t=>{o[t.user_id]=t.role}));const c=e.users.map((t=>({...t,user_role:o[t.id]||null})));return{items:c}}async function I(t){const{data:r,error:e}=await q.N.auth.admin.getUserById(t);return e?[]:{items:r.users}}async function v(t){try{const{data:r,error:e}=await q.N.auth.admin.createUser({email:t.email,password:t.password,email_confirm:t.email_confirm});if(e)throw new Error(e.message);return r}catch(r){throw new Error(r.message)}}async function x(t){try{const{error:r}=await q.N.auth.admin.deleteUser(t);if(r)throw new Error(r.message);return"User successfully deleted"}catch(r){throw new Error(`Failed to delete user: ${r.message}`)}}const $=async(t,r,e,a,n="")=>{try{const o=(t-1)*r;let c="\n            SELECT \n                agency.id AS id,\n                agency.agency_name AS agency_name,\n                agency.agency_status AS agency_status,\n                agency.agency_description AS agency_description,\n                COUNT(talent.id) AS talent_count\n            FROM \n                agency\n            LEFT JOIN \n                talent ON talent.agency_id = agency.id\n        ";n&&(c+=` WHERE agency_name ILIKE '%${n}%'`),c+=`\n            GROUP BY agency.id, agency.agency_name, talent.agency_id\n            ORDER BY ${e} ${"asc"===a?"ASC":"DESC"}\n        `,c+=`\n            LIMIT ${r}\n            OFFSET ${o}\n        `;const{data:s,error:i}=await q.N.rpc("execute_dynamic_query",{query:c}),u="\n            SELECT COUNT(*) FROM agency\n        ",{data:d,error:g}=await q.N.rpc("execute_dynamic_query",{query:u});if(i||g)throw i||g;const l=d[0].count;return{items:s,totalItems:l,totalPages:Math.ceil(l/r)}}catch(o){return{error:o.message}}},D=async()=>{try{const{data:t,error:r}=await q.N.from("agency").select("*");if(r)throw r;return t}catch(t){return console.error("Error fetching agencies:",t),{error:t.message}}},A=async t=>{try{const{data:r,error:e}=await q.N.from("agency").select("*,talent(*)").eq("id",t).single();if(e)throw e;const a=r.talent?r.talent.length:0;return{...r,talentCount:a}}catch(r){return console.error(`Error fetching agency with ID ${t}:`,r),{error:r.message}}},T=async t=>{try{const{data:r,error:e}=await q.N.from("agency").insert(t).single();if(e)throw e;return r}catch(r){return console.error("Error creating agency:",r),{error:r.message}}},R=async t=>{try{const{data:r,error:e}=await q.N.from("agency").update(t).eq("id",t.id).single();if(e)throw e;return r}catch(r){return console.error(`Error updating agency with ID ${id}:`,r),{error:r.message}}},Y=async t=>{try{const{data:r,error:e}=await q.N.from("agency").delete().eq("id",t);if(e)throw e;return r}catch(r){return console.error(`Error deleting agency with ID ${t}:`,r),{error:r.message}}},C=async()=>{try{const{count:t,error:r}=await q.N.from("agency").select("*",{count:"exact",head:!0});if(r)throw r;return t}catch(t){return console.error("Error counting agencies:",t),{error:t.message}}},S=async(t,r,e,a,n="")=>{try{const o=(t-1)*r,c=o+r-1;let s=q.N.from("album").select("*, album_talent(talent(*)), discography(count)",{count:"exact"}).order(e,{ascending:"asc"===a}).range(o,c);n&&(s=s.or(`name.ilike.%${n}%`));const{data:i,count:u,error:d}=await s;if(d)throw d;const g=i.map((t=>({...t,talents:t.album_talent?.map((t=>t.talent?.name))||[],discography_count:t.discography.length?t.discography[0].count:0})));return{items:g,totalItems:u,totalPages:Math.ceil(u/r)}}catch(o){return{error:o.message}}},O=async()=>{try{const{data:t,error:r}=await q.N.from("album").select("*");if(r)throw r;return t}catch(t){return console.error("Error fetching albums:",t),{error:t.message}}},P=async t=>{try{const{data:r,error:e}=await q.N.from("album").select("*").eq("id",t).single();if(e)throw e;return r}catch(r){return console.error(`Error fetching album with ID ${t}:`,r),{error:r.message}}},M=async(t,r)=>{try{const{data:e,error:a}=await q.N.from("album").insert(t).select("*").single();if(a)throw a;const n=r.map((t=>({album_id:e.id,talent_id:t.id}))),{data:o,error:c}=await q.N.from("album_talent").insert(n);if(c)throw c;return{album:e,talents:o}}catch(e){return console.error("Error creating album:",e),{error:e.message}}},B=async(t,r)=>{try{const{data:e,error:a}=await q.N.from("album").update(t).eq("id",t.id).single();if(a)throw a;const n=t.id,o=r.map((t=>t.id)),{data:c,error:s}=await q.N.from("album_talent").select("talent_id").eq("album_id",n);if(s)throw s;const i=c.map((t=>t.talent_id)),u=o.filter((t=>!i.includes(t))),d=i.filter((t=>!o.includes(t)));if(u.length>0){const{error:t}=await q.N.from("album_talent").insert(u.map((t=>({album_id:n,talent_id:t}))));if(t)throw t}if(d.length>0){const{error:t}=await q.N.from("album_talent").delete().in("talent_id",d).eq("album_id",n);if(t)throw t}return{album:e,updatedTalents:o}}catch(e){return{error:e.message}}},L=async t=>{try{const{error:r}=await q.N.from("album_talent").delete().eq("album_id",t);if(r)throw new Error(`Failed to delete album_talent: ${r.message}`);const{data:e,error:a}=await q.N.from("album").delete().eq("id",t);if(a)throw new Error(`Failed to delete album: ${a.message}`);return e}catch(r){return{error:r.message}}},U=async t=>{try{const{error:r}=await q.N.from("album_talent").delete().eq("album_id",t);if(r)throw r;const{error:e}=await q.N.from("discography").delete().eq("album_id",t);if(e)throw e;const{error:a}=await q.N.from("album").delete().eq("id",t);if(a)throw a;return{success:!0}}catch(r){return{error:r.message}}},F=async()=>{try{const{count:t,error:r}=await q.N.from("album").select("*",{count:"exact",head:!0});if(r)throw r;return t}catch(t){return console.error("Error counting albums:",t),{error:t.message}}},W=async(t,r,e,a,n="")=>{try{const o=(t-1)*r,c=o+r-1;let s=q.N.from("discography").select("*, album(id,name), discography_talent(talent(id, name))",{count:"exact"}).order(e,{ascending:"asc"===a}).range(o,c);n&&(s=s.or(`name.ilike.%${n}%`));const{data:i,count:u,error:d}=await s;if(d)throw d;const g=i.map((t=>({...t,album:t.album?.name,talents:t.discography_talent?.map((t=>t.talent?.name))||[]})));return{items:g,totalItems:u,totalPages:Math.ceil(u/r)}}catch(o){return{error:o.message}}},j=async()=>{try{const{data:t,error:r}=await q.N.from("discography").select("*");if(r)throw r;return t}catch(t){return console.error("Error fetching discographies:",t),{error:t.message}}},K=async t=>{try{const{data:r,error:e}=await q.N.from("discography").select("*").eq("id",t).single();if(e)throw e;return r}catch(r){return console.error(`Error fetching discography with ID ${t}:`,r),{error:r.message}}},H=async(t,r)=>{try{const{data:e,error:a}=await q.N.from("discography").insert(t).select("*").single();if(a)throw a;const n=r.map((t=>({discography_id:e.id,talent_id:t.id}))),{data:o,error:c}=await q.N.from("discography_talent").insert(n);if(c)throw c;return{discography:e,talents:o}}catch(e){return{error:e.message}}},J=async(t,r)=>{try{const{data:e,error:a}=await q.N.from("discography").update(t).eq("id",t.id).single();if(a)throw a;const n=t.id,o=r.map((t=>t.id)),{data:c,error:s}=await q.N.from("discography_talent").select("talent_id").eq("discography_id",n);if(s)throw s;const i=c.map((t=>t.talent_id)),u=o.filter((t=>!i.includes(t))),d=i.filter((t=>!o.includes(t)));if(u.length>0){const{error:t}=await q.N.from("discography_talent").insert(u.map((t=>({discography_id:n,talent_id:t}))));if(t)throw t}if(d.length>0){const{error:t}=await q.N.from("discography_talent").delete().in("talent_id",d).eq("discography_id",n);if(t)throw t}return{discography:e,updatedTalents:o}}catch(e){return{error:e.message}}},G=async t=>{try{const{error:r}=await q.N.from("discography_talent").delete().eq("discography_id",t);if(r)throw new Error(`Failed to delete discography_talent: ${r.message}`);const{data:e,error:a}=await q.N.from("discography").delete().eq("id",t);if(a)throw new Error(`Failed to delete discography: ${a.message}`);return e}catch(r){return{error:r.message}}},z=async()=>{try{const{count:t,error:r}=await q.N.from("discography").select("*",{count:"exact",head:!0});if(r)throw r;return t}catch(t){return console.error("Error counting discographies:",t),{error:t.message}}},Q=async(t,r,e,a,n="")=>{try{const o=(t-1)*r,c=o+r-1;let s=q.N.from("event").select("*, event_talent(talent(id, name))",{count:"exact"}).order(e,{ascending:"asc"===a}).range(o,c);n&&(s=s.or(`event_title.ilike.%${n}%,event_summary.ilike.%${n}%,event_hashtag.ilike.%${n}%`));const{data:i,count:u,error:d}=await s;if(d)throw d;const g=i.map((t=>({...t,talents:t.event_talent?.map((t=>t.talent?.name))||[]})));return{items:g,totalItems:u,totalPages:Math.ceil(u/r)}}catch(o){return{error:o.message}}},V=async()=>{try{const{data:t,error:r}=await q.N.from("event").select("*");if(r)throw r;return t}catch(t){return{error:t.message}}},X=async t=>{try{const{data:r,error:e}=await q.N.from("event").select("*").eq("id",t).single();if(e)throw e;return r}catch(r){return{error:r.message}}},Z=async(t,r)=>{try{const{data:e,error:a}=await q.N.from("event").insert(t).select("*").single();if(a)throw a;const n=r.map((t=>({event_id:e.id,talent_id:t.id}))),{data:o,error:c}=await q.N.from("event_talent").insert(n);if(c)throw c;return{event:e,talents:o}}catch(e){return{error:e.message}}},tt=async(t,r)=>{try{const{data:e,error:a}=await q.N.from("event").update(t).eq("id",t.id).single();if(a)throw a;const n=t.id,o=r.map((t=>t.id)),{data:c,error:s}=await q.N.from("event_talent").select("talent_id").eq("event_id",n);if(s)throw s;const i=c.map((t=>t.talent_id)),u=o.filter((t=>!i.includes(t))),d=i.filter((t=>!o.includes(t)));if(u.length>0){const{error:t}=await q.N.from("event_talent").insert(u.map((t=>({event_id:n,talent_id:t}))));if(t)throw t}if(d.length>0){const{error:t}=await q.N.from("event_talent").delete().in("talent_id",d).eq("event_id",n);if(t)throw t}return{event:e,updatedTalents:o}}catch(e){return{error:e.message}}},rt=async t=>{try{const{error:r}=await q.N.from("event_talent").delete().eq("event_id",t);if(r)throw new Error(`Failed to delete event_talent: ${r.message}`);const{data:e,error:a}=await q.N.from("event").delete().eq("id",t);if(a)throw new Error(`Failed to delete event: ${a.message}`);return e}catch(r){return{error:r.message}}},et=async()=>{try{const{count:t,error:r}=await q.N.from("event").select("*",{count:"exact",head:!0});if(r)throw r;return t}catch(t){return{error:t.message}}},at=async(t,r,e,a,n="")=>{try{const o=(t-1)*r,c=`LIMIT ${r} OFFSET ${o}`;let s="\n            SELECT \n                talent.id AS id,\n                talent.name AS name,\n                talent.original_name AS original_name,\n                talent.debut_date AS debut_date,\n                talent.talent_status AS talent_status,\n                talent.retirement_date AS retirement_date,\n                talent.date_of_birth AS date_of_birth,\n                talent.gender AS gender,\n                talent.height AS height,\n                talent.emoji AS emoji,\n                agency.id AS agency_id,\n                agency.agency_name AS agency,\n                COUNT(album_talent.album_id) AS album_count,\n                COUNT(discography_talent.discography_id) AS discography_count\n            FROM \n                talent\n            LEFT JOIN \n                album_talent ON talent.id = album_talent.talent_id\n            LEFT JOIN \n                discography_talent ON talent.id = discography_talent.talent_id\n            LEFT JOIN \n                agency ON talent.agency_id = agency.id\n        ";n&&(s+=` WHERE talent.name ILIKE '%${n}%' OR talent.original_name ILIKE '%${n}%'`),s+=`\n            GROUP BY talent.id, agency.id, agency.agency_name, album_talent.talent_id, discography_talent.talent_id\n            ORDER BY ${e} ${"asc"===a?"ASC":"DESC"}\n            ${c}\n        `;const{data:i,error:u}=await q.N.rpc("execute_dynamic_query",{query:s});if(u)throw u;const d="\n            SELECT COUNT(*) AS total_count\n            FROM talent\n        ",{data:g,error:l}=await q.N.rpc("execute_dynamic_query",{query:d});if(l)throw l;const h=g[0]?.total_count||0;return{items:i,totalItems:h,totalPages:Math.ceil(h/r)}}catch(o){return console.error("Error fetching talents:",o),{error:o.message}}},nt=async()=>{try{const{data:t,error:r}=await q.N.from("talent").select("id, name").order("name",{ascending:!0});if(r)throw r;return t}catch(t){return console.error("Error fetching talents:",t),{error:t.message}}},ot=async t=>{try{const{data:r,error:e}=await q.N.from("talent").select("*, agency(*)").eq("id",t).single();if(e)throw e;return r}catch(r){return console.error(`Error fetching talent with ID ${t}:`,r),{error:r.message}}},ct=async t=>{try{const{data:r,error:e}=await q.N.from("talent").insert(t).single();if(e)throw e;return r}catch(r){return console.error("Error creating talent:",r),{error:r.message}}},st=async t=>{try{const{data:r,error:e}=await q.N.from("talent").update(t).eq("id",t.id).single();if(e)throw e;return r}catch(r){return console.error(`Error updating talent with ID ${id}:`,r),{error:r.message}}},it=async t=>{try{const{data:r,error:e}=await q.N.from("talent").delete().eq("id",t);if(e)throw e;return r}catch(r){return console.error(`Error deleting talent with ID ${t}:`,r),{error:r.message}}},ut=async()=>{try{const{count:t,error:r}=await q.N.from("talent").select("*",{count:"exact",head:!0});if(r)throw r;return t}catch(t){return console.error("Error counting talents:",t),{error:t.message}}},dt=async(t,r,e,a,n="")=>{try{const o=(t-1)*r,c=o+r-1;let s=q.N.from("dataset").select("id, source_text, target_text, source, category").order(e,{ascending:"asc"===a}).range(o,c);n&&(s=s.or(`source_text.ilike.%${n}%,target_text.ilike.%${n}%`));const{data:i,error:u}=await s;return u?0:i}catch(o){return 0}},gt=async t=>{try{let r="\n            SELECT\n                COUNT(id)\n            FROM \n                dataset\n        ";t&&(r+=`\n                WHERE \n                    lower(source_text) LIKE '%${t.toLowerCase()}%' \n                    OR lower(target_text) LIKE '%${t.toLowerCase()}%'\n        `),r+="LIMIT 1";const{data:e,error:a}=await q.N.rpc("execute_dynamic_query",{query:r});return a?{error:a}:e[0].count}catch(r){return{error:r.message}}},lt=async t=>{try{const{data:r,error:e}=await q.N.from("dataset").select("*").eq("id",t).single();if(e)throw e;return r}catch(r){return console.error(`Error fetching dataset with ID ${t}:`,r),{error:r.message}}},ht=async t=>{try{const{data:r,error:e}=await q.N.from("dataset").insert(t).single();if(e)throw e;return r}catch(r){return console.error("Error creating dataset:",r),{error:r.message}}},mt=async t=>{try{const{data:r,error:e}=await q.N.from("dataset").update(t).eq("id",t.id).single();if(e)throw e;return r}catch(r){return console.error(`Error updating dataset with ID ${id}:`,r),{error:r.message}}},yt=async t=>{try{const{data:r,error:e}=await q.N.from("dataset").delete().eq("id",t);if(e)throw e;return r}catch(r){return console.error(`Error deleting dataset with ID ${t}:`,r),{error:r.message}}},ft=async()=>{try{const{count:t,error:r}=await q.N.from("dataset").select("*",{count:"exact",head:!0});if(r)throw r;return t}catch(t){return console.error("Error counting datasets:",t),{error:t.message}}},wt=t=>{const r=t=>{if("string"===typeof t){const r=t.replace(/"/g,'""');return`"${r}"`}return t},e=Object.keys(t[0]).map(r).join(",")+"\n",a=t.map((t=>Object.values(t).map(r).join(","))).join("\n");return e+a},_t=t=>{const[r,...e]=t.split("\n"),a=r.split(",");return e.map((t=>{const r=t.split(",");return a.reduce(((t,e,a)=>(t[e.trim()]=r[a].trim(),t)),{})}))},pt=async(t,r,e)=>{try{let a=`\n            SELECT\n                source_text,\n                target_text\n            FROM \n                dataset\n            WHERE \n                (array_length(regexp_split_to_array(source_text, '\\s+'), 1) <= ${r})\n                AND\n                (array_length(regexp_split_to_array(target_text, '\\s+'), 1) <= ${e})\n        `;const{data:n,error:o}=await q.N.rpc("execute_dynamic_query",{query:a});if(o)throw o;const c=wt(n),s=new Blob([c],{type:"text/csv;charset=utf-8;"}),i=document.createElement("a"),u=URL.createObjectURL(s);return i.setAttribute("href",u),i.setAttribute("download",t?`${t}.csv`:"export.csv"),i.style.visibility="hidden",document.body.appendChild(i),i.click(),document.body.removeChild(i),{success:!0,message:"Export successful"}}catch(a){return{success:!1,message:`Error exporting data: ${a.message}`}}},Nt=async t=>{const r=t.target.files[0];if(!r)return;const e=new FileReader;e.onload=async()=>{const t=e.result;let a;if(r.name.endsWith(".csv")?a=_t(t):r.name.endsWith(".json")&&(a=JSON.parse(t)),a)try{const{error:t}=await q.N.from("your_table_name").insert(a);if(t)throw t;alert("Data imported successfully")}catch(n){console.error("Error importing data:",n.message)}},e.readAsText(r)},Et=async(t,r,e,a,n="")=>{try{const o=(t-1)*r,c=o+r-1;let s=q.N.from("dataset_unprocess").select("id, source_text, target_text").order(e,{ascending:"asc"===a}).range(o,c);n&&(s=s.or(`source_text.ilike.%${n}%,target_text.ilike.%${n}%`));const{data:i,error:u}=await s;return u?0:i}catch(o){return 0}},qt=async t=>{try{let r="\n            SELECT\n                COUNT(id)\n            FROM \n                dataset_unprocess\n        ";t&&(r+=`\n                WHERE \n                    lower(source_text) LIKE '%${t.toLowerCase()}%' \n                    OR lower(target_text) LIKE '%${t.toLowerCase()}%'\n        `),r+="LIMIT 1";const{data:e,error:a}=await q.N.rpc("execute_dynamic_query",{query:r});return a?{error:a}:e[0].count}catch(r){return{error:r.message}}},kt=async t=>{try{const{data:r,error:e}=await q.N.from("dataset_unprocess").select("*").eq("id",t).single();if(e)throw e;return r}catch(r){return{error:r.message}}},bt=async t=>{try{const{data:r,error:e}=await q.N.from("dataset_unprocess").insert(t).single();if(e)throw e;return r}catch(r){return{error:r.message}}},It=async t=>{try{const{data:r,error:e}=await q.N.from("dataset_unprocess").update(t).eq("id",t.id).single();if(e)throw e;return r}catch(r){return{error:r.message}}},vt=async t=>{try{const{data:r,error:e}=await q.N.from("dataset_unprocess").delete().eq("id",t);if(e)throw e;return r}catch(r){return{error:r.message}}},xt=async()=>{try{const{count:t,error:r}=await q.N.from("dataset_unprocess").select("*",{count:"exact",head:!0});if(r)throw r;return t}catch(t){return{error:t.message}}},$t=async()=>{try{let t=q.N.from("chatgroup").select("*,message(*)",{count:"exact"});const{data:r,count:e,error:a}=await t;if(a)throw a;return{items:r}}catch(t){return{error:t.message}}},Dt=async t=>{try{const{data:r,error:e}=await q.N.from("chatgroup").select("*").eq("id",t).single();if(e)throw e;return r}catch(r){return{error:r.message}}},At=async t=>{try{const{data:r,error:e}=await q.N.from("chatgroup").insert(t).single();if(e)throw e;return r}catch(r){return{error:r.message}}},Tt=async t=>{try{const{data:r,error:e}=await q.N.from("chatgroup").update(t).eq("id",t.id).single();if(e)throw e;return r}catch(r){return{error:r.message}}},Rt=async t=>{try{const{data:r,error:e}=await q.N.from("chatgroup").delete().eq("id",t);if(e)throw e;return r}catch(r){return{error:r.message}}},Yt=async()=>{try{const{count:t,error:r}=await q.N.from("chatgroup").select("*",{count:"exact",head:!0});if(r)throw r;return t}catch(t){return{error:t.message}}},Ct=async()=>{try{let t=q.N.from("message").select("*",{count:"exact"});const{data:r,count:e,error:a}=await t;if(a)throw a;return{items:r}}catch(t){return{error:t.message}}},St=async t=>{try{const{data:r,error:e}=await q.N.from("message").select("*").eq("id",t).single();if(e)throw e;return r}catch(r){return{error:r.message}}},Ot=async t=>{try{const{data:r,error:e}=await q.N.from("message").insert(t).single();if(e)throw e;return r}catch(r){return{error:r.message}}},Pt=async t=>{try{const{data:r,error:e}=await q.N.from("message").update(t).eq("id",t.id).single();if(e)throw e;return r}catch(r){return{error:r.message}}},Mt=async t=>{try{const{data:r,error:e}=await q.N.from("message").delete().eq("id",t);if(e)throw e;return r}catch(r){return{error:r.message}}},Bt=async()=>{try{const{count:t,error:r}=await q.N.from("message").select("*",{count:"exact",head:!0});if(r)throw r;return t}catch(t){return{error:t.message}}},Lt=async(t,r,e,a,n="")=>{try{const o=(t-1)*r,c=`LIMIT ${r} OFFSET ${o}`;let s="\n            SELECT \n                task.id AS id,\n                task.title AS title,\n                task.description AS description,\n                task.task_priority AS task_priority,\n                task.task_status AS task_status,\n                task.assigned_to AS assigned_to,\n                task.created_at AS created_at,\n            FROM \n                task\n        ";n&&(s+=` WHERE task.title ILIKE '%${n}%'`),s+=`\n            GROUP BY task.id, task.title\n            ORDER BY ${e} ${"asc"===a?"ASC":"DESC"}\n            ${c}\n        `;const{data:i,error:u}=await q.N.rpc("execute_dynamic_query",{query:s});if(u)throw u;const d="\n            SELECT COUNT(*) AS total_count\n            FROM task\n        ",{data:g,error:l}=await q.N.rpc("execute_dynamic_query",{query:d});if(l)throw l;const h=g[0]?.total_count||0;return{items:i,totalItems:h,totalPages:Math.ceil(h/r)}}catch(o){return console.error("Error fetching tasks:",o),{error:o.message}}},Ut=async()=>{try{const{data:t,error:r}=await q.N.from("task").select("*");if(r)throw r;const e=[{status:"refinement",tasks:[]},{status:"to_do",tasks:[]},{status:"in_progress",tasks:[]},{status:"review",tasks:[]},{status:"testing",tasks:[]},{status:"completed",tasks:[]}];return t.forEach((t=>{const r=e.find((r=>r.status===t.status));r&&r.tasks.push(t)})),e}catch(t){return{error:t.message}}},Ft=async t=>{try{const{data:r,error:e}=await q.N.from("task").select("*").eq("id",t).single();if(e)throw e;return r}catch(r){return{error:r.message}}},Wt=async t=>{try{const{data:r,error:e}=await q.N.from("task").insert(t).single();if(e)throw e;return r}catch(r){return{error:r.message}}},jt=async t=>{try{const{data:r,error:e}=await q.N.from("task").update(t).eq("id",t.id).single();if(e)throw e;return r}catch(r){return{error:r.message}}},Kt=async t=>{try{const{data:r,error:e}=await q.N.from("task").delete().eq("id",t);if(e)throw e;return r}catch(r){return{error:r.message}}},Ht=async()=>{try{const{count:t,error:r}=await q.N.from("task").select("*",{count:"exact",head:!0});if(r)throw r;return t}catch(t){return{error:t.message}}},Jt=async(t,r,e,a,n="")=>{try{const o=(t-1)*r,c=o+r-1;let s=q.N.from("yugioh_banlist").select("*",{count:"exact"}).order(e,{ascending:"asc"===a}).range(o,c);n&&(s=s.or(`name.ilike.%${n}%`));const{data:i,count:u,error:d}=await s;if(d)throw d;return{items:i,totalItems:u,totalPages:Math.ceil(u/r)}}catch(o){return{error:o.message}}},Gt=async()=>{try{const{data:t,error:r}=await q.N.from("yugioh_banlist").select("*");if(r)throw r;return t}catch(t){return{error:t.message}}},zt=async t=>{try{const{data:r,error:e}=await q.N.from("yugioh_banlist").select("*").eq("id",t).single();if(e)throw e;return r}catch(r){return{error:r.message}}},Qt=async t=>{try{const{data:r,error:e}=await q.N.from("yugioh_banlist").insert(t).single();if(e)throw e;return r}catch(r){return{error:r.message}}},Vt=async t=>{try{const{data:r,error:e}=await q.N.from("yugioh_banlist").update(t).eq("id",t.id).single();if(e)throw e;return r}catch(r){return{error:r.message}}},Xt=async t=>{try{const{data:r,error:e}=await q.N.from("yugioh_banlist").delete().eq("id",t);if(e)throw e;return r}catch(r){return{error:r.message}}},Zt=async()=>{try{const{count:t,error:r}=await q.N.from("yugioh_banlist").select("*",{count:"exact",head:!0});if(r)throw r;return t}catch(t){return{error:t.message}}},tr=async(t,r,e,a,n="")=>{try{const o=(t-1)*r,c=o+r-1;let s=q.N.from("yugioh_card").select("*",{count:"exact"}).order(e,{ascending:"asc"===a}).range(o,c);n&&(s=s.or(`name.ilike.%${n}%`));const{data:i,count:u,error:d}=await s;if(d)throw d;return{items:i,totalItems:u,totalPages:Math.ceil(u/r)}}catch(o){return{error:o.message}}},rr=async()=>{try{const{data:t,error:r}=await q.N.from("yugioh_card").select("*");if(r)throw r;return t}catch(t){return{error:t.message}}},er=async t=>{try{const{data:r,error:e}=await q.N.from("yugioh_card").select("*").eq("id",t).single();if(e)throw e;return r}catch(r){return{error:r.message}}},ar=async t=>{try{const{data:r,error:e}=await q.N.from("yugioh_card").insert(t).single();if(e)throw e;return r}catch(r){return{error:r.message}}},nr=async t=>{try{const{data:r,error:e}=await q.N.from("yugioh_card").update(t).eq("id",t.id).single();if(e)throw e;return r}catch(r){return{error:r.message}}},or=async t=>{try{const{data:r,error:e}=await q.N.from("yugioh_card").delete().eq("id",t);if(e)throw e;return r}catch(r){return{error:r.message}}},cr=async()=>{try{const{count:t,error:r}=await q.N.from("yugioh_card").select("*",{count:"exact",head:!0});if(r)throw r;return t}catch(t){return{error:t.message}}},sr=async(t,r,e,a,n="")=>{try{const o=(t-1)*r,c=o+r-1;let s=q.N.from("yugioh_deck").select("*",{count:"exact"}).order(e,{ascending:"asc"===a}).range(o,c);n&&(s=s.or(`name.ilike.%${n}%`));const{data:i,count:u,error:d}=await s;if(d)throw d;return h,{items:i,totalItems:u,totalPages:Math.ceil(u/r)}}catch(o){return{error:o.message}}},ir=async()=>{try{const{data:t,error:r}=await q.N.from("yugioh_deck").select("*");if(r)throw r;return t}catch(t){return{error:t.message}}},ur=async t=>{try{const{data:r,error:e}=await q.N.from("yugioh_deck").select("*").eq("id",t).single();if(e)throw e;return r}catch(r){return{error:r.message}}},dr=async t=>{try{const{data:r,error:e}=await q.N.from("yugioh_deck").insert(t).single();if(e)throw e;return r}catch(r){return{error:r.message}}},gr=async t=>{try{const{data:r,error:e}=await q.N.from("yugioh_deck").update(t).eq("id",t.id).single();if(e)throw e;return r}catch(r){return{error:r.message}}},lr=async t=>{try{const{data:r,error:e}=await q.N.from("yugioh_deck").delete().eq("id",t);if(e)throw e;return r}catch(r){return{error:r.message}}},hr=async()=>{try{const{count:t,error:r}=await q.N.from("yugioh_deck").select("*",{count:"exact",head:!0});if(r)throw r;return t}catch(t){return{error:t.message}}},mr=async(t,r,e,a,n="")=>{try{const o=(t-1)*r,c=o+r-1;let s=q.N.from("yugioh_duelist").select("*",{count:"exact"}).order(e,{ascending:"asc"===a}).range(o,c);n&&(s=s.or(`name.ilike.%${n}%`));const{data:i,count:u,error:d}=await s;if(d)throw d;return{items:i,totalItems:u,totalPages:Math.ceil(u/r)}}catch(o){return{error:o.message}}},yr=async()=>{try{const{data:t,error:r}=await q.N.from("yugioh_duelist").select("*");if(r)throw r;return t}catch(t){return{error:t.message}}},fr=async t=>{try{const{data:r,error:e}=await q.N.from("yugioh_duelist").select("*").eq("id",t).single();if(e)throw e;return r}catch(r){return{error:r.message}}},wr=async t=>{try{const{data:r,error:e}=await q.N.from("yugioh_duelist").insert(t).single();if(e)throw e;return r}catch(r){return{error:r.message}}},_r=async t=>{try{const{data:r,error:e}=await q.N.from("yugioh_duelist").update(t).eq("id",t.id).single();if(e)throw e;return r}catch(r){return{error:r.message}}},pr=async t=>{try{const{data:r,error:e}=await q.N.from("yugioh_duelist").delete().eq("id",t);if(e)throw e;return r}catch(r){return{error:r.message}}},Nr=async()=>{try{const{count:t,error:r}=await q.N.from("yugioh_duelist").select("*",{count:"exact",head:!0});if(r)throw r;return t}catch(t){return{error:t.message}}},Er=async(t,r,e,a,n="")=>{try{const o=(t-1)*r,c=o+r-1;let s=q.N.from("yugioh_product").select("*",{count:"exact"}).order(e,{ascending:"asc"===a}).range(o,c);n&&(s=s.or(`name.ilike.%${n}%`));const{data:i,count:u,error:d}=await s;if(d)throw d;return{items:i,totalItems:u,totalPages:Math.ceil(u/r)}}catch(o){return{error:o.message}}},qr=async()=>{try{const{data:t,error:r}=await q.N.from("yugioh_product").select("*");if(r)throw r;return t}catch(t){return{error:t.message}}},kr=async t=>{try{const{data:r,error:e}=await q.N.from("yugioh_product").select("*").eq("id",t).single();if(e)throw e;return r}catch(r){return{error:r.message}}},br=async t=>{try{const{data:r,error:e}=await q.N.from("yugioh_product").insert(t).single();if(e)throw e;return r}catch(r){return{error:r.message}}},Ir=async t=>{try{const{data:r,error:e}=await q.N.from("yugioh_product").update(t).eq("id",t.id).single();if(e)throw e;return r}catch(r){return{error:r.message}}},vr=async t=>{try{const{data:r,error:e}=await q.N.from("yugioh_product").delete().eq("id",t);if(e)throw e;return r}catch(r){return{error:r.message}}},xr=async()=>{try{const{count:t,error:r}=await q.N.from("yugioh_product").select("*",{count:"exact",head:!0});if(r)throw r;return t}catch(t){return{error:t.message}}},$r=async(t,r,e,a,n="")=>{try{const o=(t-1)*r,c=o+r-1;let s=q.N.from("yugioh_tournament").select("*",{count:"exact"}).order(e,{ascending:"asc"===a}).range(o,c);n&&(s=s.or(`name.ilike.%${n}%`));const{data:i,count:u,error:d}=await s;if(d)throw d;return{items:i,totalItems:u,totalPages:Math.ceil(u/r)}}catch(o){return{error:o.message}}},Dr=async()=>{try{const{data:t,error:r}=await q.N.from("yugioh_tournament").select("*");if(r)throw r;return t}catch(t){return{error:t.message}}},Ar=async t=>{try{const{data:r,error:e}=await q.N.from("yugioh_tournament").select("*").eq("id",t).single();if(e)throw e;return r}catch(r){return{error:r.message}}},Tr=async t=>{try{const{data:r,error:e}=await q.N.from("yugioh_tournament").insert(t).single();if(e)throw e;return r}catch(r){return{error:r.message}}},Rr=async t=>{try{const{data:r,error:e}=await q.N.from("yugioh_tournament").update(t).eq("id",t.id).single();if(e)throw e;return r}catch(r){return{error:r.message}}},Yr=async t=>{try{const{data:r,error:e}=await q.N.from("yugioh_tournament").delete().eq("id",t);if(e)throw e;return r}catch(r){return{error:r.message}}},Cr=async()=>{try{const{count:t,error:r}=await q.N.from("yugioh_tournament").select("*",{count:"exact",head:!0});if(r)throw r;return t}catch(t){return{error:t.message}}},Sr={...n,...o,...c,...s,...i,...u,...d,...g,...l,...m,...a,...y,...f,...w,..._,...p,...N,...E}}}]);